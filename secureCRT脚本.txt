在secureCRT软件上运行一些简单的python脚本
secureCRT支持运行.js和.vbs以及.py格式的脚本，无奈mac上识别前两个格式的脚本只能写一写python脚本，
举个简单的例子，利用脚本直接ssh连接一台机器，
在View菜单中勾选Button Bar让这个菜单在下方显示出来，
在下方的Default右方右键出现一个菜单点击New Button按钮，在显示框的Function一栏选择Run Script中间选择编写好的.py文件
.py文件的内容大致如下：
这里写两个小脚本
# $language = "python"
# $interface = "1.0"

#官方的实例可以在未连接任何服务器的情况下进行ssh连接

#你要连接的ssh服务器ip
host = '139.196.53.1**'
#ssh用户名
user = 'root'
#ssh密码
passwd = 'Jinx0007'

def main():
   
    #进行cmd操作连接创建新的session连接
    cmd = "/SSH2 /L %s /PASSWORD %s /C 3DES /M MD5 %s" % (user, passwd, host)
    crt.Session.Connect(cmd)
    #使用默认弹窗提示信息
    crt.Dialog.MessageBox('登录成功!')

main()

2.第二个脚本：
# $language = "python"
# $interface = "1.0"
#此方法表示你必须先登录一台ssh服务器然后再去ssh到另外一台服务器
#ssh主机的ip
host = '192.168.0.111'
#ssh主机的用户名
user = 'root'
#ssh主机的密码
passwd = 'Jinx0007'

def main():
    #向屏幕光标后发送以下文字内容，\r表示回车执行
    crt.Screen.Send('ssh '+user+'@'+host+'  \r')
    #在5秒内等待屏幕出现password:或者yes/no文字进行下方操作，超过5秒表示超时
    result = crt.Screen.WaitForStrings(['password:','(yes/no)'],5)
    #当屏幕出现password:字符
    if result == 1:
        crt.Screen.Send(passwd+"\r")
    #屏幕出现(yes/no)等相关字符
    if result == 2:
        crt.Screen.Send('yes \r')
        crt.Screen.WaitForString('password:', 2)
        crt.Screen.Send(passwd+"\r")
    #等待屏幕出现']$'字符
    crt.Screen.WaitForString(']$',5)
    #使用默认弹窗提示信息
    crt.Dialog.MessageBox('登录成功!')
 
main()
