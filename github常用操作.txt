

git branch #查看本地分支
git branch -a #查看本地和远程分支
git checkout -b 本地分支名称 origin/test #创建本地分支并追踪远程test分支
git checkout -b 本地分支 #创建本地分支
git add .#新增文件准备提交前操作
git status #查看当前分支修改内容
git commit -a -m "提交注释内容" #将需要提交的提交到缓冲区域
git checkout web/src/test/java/com/bestpay/cashier/UnitTest.java #将该java类还原
更改本地某个分支的追踪分支
vi .git/config中 merge = refs/heads/test

以下是提交方式
1)git push origin test:test001
#将本地分支test推送到远程test001分支

2)git push origin test
#将本地test分支推送到远程test分支，如果远程test分支不存在则会被创建

3)git push origin
#将当前分支推送到远程对应名称的分支

3)git push
#如果当前分支的远程追踪分支只有一个，那么远程主机名origin可以省略

4)git push origin HEAD
#将当前分支推送到远程对应名称的分支，考虑当前分支名称

5)git push origin HEAD:test
#将当前分支推送到远程指定test分支，不考虑当前分支名称

6)git push origin master:refs/heads/test
#将当前分支推送到远程新建的test分支，一般用于当前分支名与想推送的远程分支名称不一致

7)git push --set-upstream origin test
#将当前分支（没有关联追踪到远程分支）追踪到远程的一个分支test并且推送到远程分支test

8) git merge -s subtree origin/test
#将远程的test的分支合并到本地当前分支

9)本地commit之后还原
使用 git  log查看最近commit的id编码
使用 git reset --hard 你想还原到的commit_id

10)本地分支重命名
git branch -m 改之后的分支名 改之前的分支名 
